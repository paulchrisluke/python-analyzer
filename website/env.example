# Cloudflare D1 HTTP Driver Configuration for Local Development
CLOUDFLARE_ACCOUNT_ID=your-cloudflare-account-id
CLOUDFLARE_D1_DATABASE_ID=your-d1-database-id
CLOUDFLARE_API_TOKEN=your-cloudflare-api-token

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000,http://127.0.0.1:3001

# Admin Configuration (server-only). Do NOT expose secrets/PII via NEXT_PUBLIC_*.
# Comma-separated list of admin email addresses (placeholders):
ADMIN_EMAILS="admin@example.com,ops@example.com"
# Store only password hashes via your secret manager (e.g., Vercel/Cloudflare secrets).
# Do not commit real values.
# SECURITY: Never leave this empty in production. Always set explicit password hashes.
# For development, use a documented dev-only override with DEV_MODE flag.
# Generate hashes using: bcrypt with cost factor 12 (recommended for production)
# Example: ADMIN_PASSWORD_HASHES="$2b$12$N9qo8uLOickgx2ZMRZoMye,$2b$12$N9qo8uLOickgx2ZMRZoMye"
# Note: Server uses bcrypt cost factor 12. Generate compatible hashes using: bcrypt.hash(password, 12)

# Buyer Configuration (server-only). Do NOT expose secrets/PII via NEXT_PUBLIC_*.
# Comma-separated list of buyer email addresses (placeholders):
BUYER_EMAILS="buyer@example.com,investor@example.com"
# Store only password hashes via your secret manager (e.g., Vercel/Cloudflare secrets).
# Do not commit real values.
# SECURITY: Never leave this empty in production. Always set explicit password hashes.
# For development, use a documented dev-only override with DEV_MODE flag.
# Generate hashes using: bcrypt with cost factor 12 (recommended for production)
# Example: BUYER_PASSWORD_HASHES="$2b$12$N9qo8uLOickgx2ZMRZoMye,$2b$12$N9qo8uLOickgx2ZMRZoMye"
# Note: Server uses bcrypt cost factor 12. Generate compatible hashes using: bcrypt.hash(password, 12)

# JWT Secret for session token signing (server-only, never exposed to client)
# Generate a strong secret using: openssl rand -base64 64
# Rotate immediately if compromised. Store via your secret manager in all environments.
# Never prefix with NEXT_PUBLIC_ or expose to client-side code.
AUTH_SECRET=your-super-secret-jwt-key-here-minimum-32-characters

# Test Configuration
TEST_USER_EMAIL=testuser@example.com
TEST_USER_PASSWORD=testpass123!
TEST_ADMIN_EMAIL=admin@example.com
TEST_ADMIN_PASSWORD=admin123!
TEST_BUYER_EMAIL=buyer@example.com
TEST_BUYER_PASSWORD=buyer123!

# Application URLs
# Base URL for the Next.js application
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Environment
NODE_ENV=development

# Development Authentication Bypass (OPT-IN)
# Set to 'true' to bypass authentication in development mode only
# This is separate from PLAYWRIGHT_TEST and only works when NODE_ENV !== 'production'
# WARNING: Only use this for local development - never enable in production
DEV_AUTH_BYPASS=false

# Testing Configuration
# Set this to 'true' when running Playwright tests to disable development auth bypass                         
PLAYWRIGHT_TEST=false

# Data Directory Configuration
# Directory path for admin dashboard data files (server-side only)
# Used by CI/CD to specify alternative data location (e.g., .data for admin files)
# MUST be a non-public/server-only directory to prevent exposing sensitive data
# Defaults to '.data' if not set
# ADMIN_DATA_DIR=.data
